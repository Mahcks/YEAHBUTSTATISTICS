"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("core-js/modules/es.promise.js");

var _graphqlRequest = require("graphql-request");

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

const client = new _graphqlRequest.GraphQLClient("https://api.7tv.app/v2/gql");

class GraphQL {
  constructor(endpoint, authorization) {
    this.endpoint = endpoint;
    this.authorization = authorization;
    this.client = new _graphqlRequest.GraphQLClient("https://api.7tv.app/v2/gql");
  }

  request(query, variables) {
    var _this = this;

    return _asyncToGenerator(function* () {
      return client.request(query, variables, {
        authorization: _this.authorization
      });
    })();
  }

}

exports.default = GraphQL;